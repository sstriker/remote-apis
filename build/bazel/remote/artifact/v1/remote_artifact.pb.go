// Code generated by protoc-gen-go. DO NOT EDIT.
// source: build/bazel/remote/artifact/v1/remote_artifact.proto

package remoteartifact

import (
	context "context"
	fmt "fmt"
	v2 "github.com/bazelbuild/remote-apis/build/bazel/remote/execution/v2"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Qualifier struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qualifier) Reset()         { *m = Qualifier{} }
func (m *Qualifier) String() string { return proto.CompactTextString(m) }
func (*Qualifier) ProtoMessage()    {}
func (*Qualifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{0}
}

func (m *Qualifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qualifier.Unmarshal(m, b)
}
func (m *Qualifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qualifier.Marshal(b, m, deterministic)
}
func (m *Qualifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qualifier.Merge(m, src)
}
func (m *Qualifier) XXX_Size() int {
	return xxx_messageInfo_Qualifier.Size(m)
}
func (m *Qualifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Qualifier.DiscardUnknown(m)
}

var xxx_messageInfo_Qualifier proto.InternalMessageInfo

func (m *Qualifier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Qualifier) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type FetchBlobRequest struct {
	InstanceName          string               `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Timeout               *duration.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	OldestContentAccepted *timestamp.Timestamp `protobuf:"bytes,3,opt,name=oldest_content_accepted,json=oldestContentAccepted,proto3" json:"oldest_content_accepted,omitempty"`
	Uris                  []string             `protobuf:"bytes,4,rep,name=uris,proto3" json:"uris,omitempty"`
	Qualifiers            []*Qualifier         `protobuf:"bytes,5,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *FetchBlobRequest) Reset()         { *m = FetchBlobRequest{} }
func (m *FetchBlobRequest) String() string { return proto.CompactTextString(m) }
func (*FetchBlobRequest) ProtoMessage()    {}
func (*FetchBlobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{1}
}

func (m *FetchBlobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBlobRequest.Unmarshal(m, b)
}
func (m *FetchBlobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBlobRequest.Marshal(b, m, deterministic)
}
func (m *FetchBlobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBlobRequest.Merge(m, src)
}
func (m *FetchBlobRequest) XXX_Size() int {
	return xxx_messageInfo_FetchBlobRequest.Size(m)
}
func (m *FetchBlobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBlobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBlobRequest proto.InternalMessageInfo

func (m *FetchBlobRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *FetchBlobRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *FetchBlobRequest) GetOldestContentAccepted() *timestamp.Timestamp {
	if m != nil {
		return m.OldestContentAccepted
	}
	return nil
}

func (m *FetchBlobRequest) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *FetchBlobRequest) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

type FetchBlobResponse struct {
	Status               *status.Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Uri                  string               `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Qualifiers           []*Qualifier         `protobuf:"bytes,3,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	BlobDigest           *v2.Digest           `protobuf:"bytes,5,opt,name=blob_digest,json=blobDigest,proto3" json:"blob_digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FetchBlobResponse) Reset()         { *m = FetchBlobResponse{} }
func (m *FetchBlobResponse) String() string { return proto.CompactTextString(m) }
func (*FetchBlobResponse) ProtoMessage()    {}
func (*FetchBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{2}
}

func (m *FetchBlobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchBlobResponse.Unmarshal(m, b)
}
func (m *FetchBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchBlobResponse.Marshal(b, m, deterministic)
}
func (m *FetchBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchBlobResponse.Merge(m, src)
}
func (m *FetchBlobResponse) XXX_Size() int {
	return xxx_messageInfo_FetchBlobResponse.Size(m)
}
func (m *FetchBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchBlobResponse proto.InternalMessageInfo

func (m *FetchBlobResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FetchBlobResponse) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *FetchBlobResponse) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

func (m *FetchBlobResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *FetchBlobResponse) GetBlobDigest() *v2.Digest {
	if m != nil {
		return m.BlobDigest
	}
	return nil
}

type FetchDirectoryRequest struct {
	InstanceName          string               `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Timeout               *duration.Duration   `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	OldestContentAccepted *timestamp.Timestamp `protobuf:"bytes,3,opt,name=oldest_content_accepted,json=oldestContentAccepted,proto3" json:"oldest_content_accepted,omitempty"`
	Uris                  []string             `protobuf:"bytes,4,rep,name=uris,proto3" json:"uris,omitempty"`
	Qualifiers            []*Qualifier         `protobuf:"bytes,5,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *FetchDirectoryRequest) Reset()         { *m = FetchDirectoryRequest{} }
func (m *FetchDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*FetchDirectoryRequest) ProtoMessage()    {}
func (*FetchDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{3}
}

func (m *FetchDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchDirectoryRequest.Unmarshal(m, b)
}
func (m *FetchDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchDirectoryRequest.Marshal(b, m, deterministic)
}
func (m *FetchDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchDirectoryRequest.Merge(m, src)
}
func (m *FetchDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_FetchDirectoryRequest.Size(m)
}
func (m *FetchDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchDirectoryRequest proto.InternalMessageInfo

func (m *FetchDirectoryRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *FetchDirectoryRequest) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *FetchDirectoryRequest) GetOldestContentAccepted() *timestamp.Timestamp {
	if m != nil {
		return m.OldestContentAccepted
	}
	return nil
}

func (m *FetchDirectoryRequest) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *FetchDirectoryRequest) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

type FetchDirectoryResponse struct {
	Status               *status.Status       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Uri                  string               `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Qualifiers           []*Qualifier         `protobuf:"bytes,3,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	RootDirectoryDigest  *v2.Digest           `protobuf:"bytes,5,opt,name=root_directory_digest,json=rootDirectoryDigest,proto3" json:"root_directory_digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FetchDirectoryResponse) Reset()         { *m = FetchDirectoryResponse{} }
func (m *FetchDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*FetchDirectoryResponse) ProtoMessage()    {}
func (*FetchDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{4}
}

func (m *FetchDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchDirectoryResponse.Unmarshal(m, b)
}
func (m *FetchDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchDirectoryResponse.Marshal(b, m, deterministic)
}
func (m *FetchDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchDirectoryResponse.Merge(m, src)
}
func (m *FetchDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_FetchDirectoryResponse.Size(m)
}
func (m *FetchDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchDirectoryResponse proto.InternalMessageInfo

func (m *FetchDirectoryResponse) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FetchDirectoryResponse) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *FetchDirectoryResponse) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

func (m *FetchDirectoryResponse) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *FetchDirectoryResponse) GetRootDirectoryDigest() *v2.Digest {
	if m != nil {
		return m.RootDirectoryDigest
	}
	return nil
}

type PushBlobRequest struct {
	InstanceName          string               `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Uris                  []string             `protobuf:"bytes,2,rep,name=uris,proto3" json:"uris,omitempty"`
	Qualifiers            []*Qualifier         `protobuf:"bytes,3,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	ExpireAt              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	BlobDigest            *v2.Digest           `protobuf:"bytes,5,opt,name=blob_digest,json=blobDigest,proto3" json:"blob_digest,omitempty"`
	ReferencesBlobs       []*v2.Digest         `protobuf:"bytes,6,rep,name=references_blobs,json=referencesBlobs,proto3" json:"references_blobs,omitempty"`
	ReferencesDirectories []*v2.Digest         `protobuf:"bytes,7,rep,name=references_directories,json=referencesDirectories,proto3" json:"references_directories,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *PushBlobRequest) Reset()         { *m = PushBlobRequest{} }
func (m *PushBlobRequest) String() string { return proto.CompactTextString(m) }
func (*PushBlobRequest) ProtoMessage()    {}
func (*PushBlobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{5}
}

func (m *PushBlobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBlobRequest.Unmarshal(m, b)
}
func (m *PushBlobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBlobRequest.Marshal(b, m, deterministic)
}
func (m *PushBlobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBlobRequest.Merge(m, src)
}
func (m *PushBlobRequest) XXX_Size() int {
	return xxx_messageInfo_PushBlobRequest.Size(m)
}
func (m *PushBlobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBlobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBlobRequest proto.InternalMessageInfo

func (m *PushBlobRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *PushBlobRequest) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *PushBlobRequest) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

func (m *PushBlobRequest) GetExpireAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func (m *PushBlobRequest) GetBlobDigest() *v2.Digest {
	if m != nil {
		return m.BlobDigest
	}
	return nil
}

func (m *PushBlobRequest) GetReferencesBlobs() []*v2.Digest {
	if m != nil {
		return m.ReferencesBlobs
	}
	return nil
}

func (m *PushBlobRequest) GetReferencesDirectories() []*v2.Digest {
	if m != nil {
		return m.ReferencesDirectories
	}
	return nil
}

type PushBlobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushBlobResponse) Reset()         { *m = PushBlobResponse{} }
func (m *PushBlobResponse) String() string { return proto.CompactTextString(m) }
func (*PushBlobResponse) ProtoMessage()    {}
func (*PushBlobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{6}
}

func (m *PushBlobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBlobResponse.Unmarshal(m, b)
}
func (m *PushBlobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBlobResponse.Marshal(b, m, deterministic)
}
func (m *PushBlobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBlobResponse.Merge(m, src)
}
func (m *PushBlobResponse) XXX_Size() int {
	return xxx_messageInfo_PushBlobResponse.Size(m)
}
func (m *PushBlobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBlobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushBlobResponse proto.InternalMessageInfo

type PushDirectoryRequest struct {
	InstanceName          string               `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Uris                  []string             `protobuf:"bytes,2,rep,name=uris,proto3" json:"uris,omitempty"`
	Qualifiers            []*Qualifier         `protobuf:"bytes,3,rep,name=qualifiers,proto3" json:"qualifiers,omitempty"`
	ExpireAt              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	RootDirectoryDigest   *v2.Digest           `protobuf:"bytes,5,opt,name=root_directory_digest,json=rootDirectoryDigest,proto3" json:"root_directory_digest,omitempty"`
	ReferencesBlobs       []*v2.Digest         `protobuf:"bytes,6,rep,name=references_blobs,json=referencesBlobs,proto3" json:"references_blobs,omitempty"`
	ReferencesDirectories []*v2.Digest         `protobuf:"bytes,7,rep,name=references_directories,json=referencesDirectories,proto3" json:"references_directories,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *PushDirectoryRequest) Reset()         { *m = PushDirectoryRequest{} }
func (m *PushDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*PushDirectoryRequest) ProtoMessage()    {}
func (*PushDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{7}
}

func (m *PushDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDirectoryRequest.Unmarshal(m, b)
}
func (m *PushDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDirectoryRequest.Marshal(b, m, deterministic)
}
func (m *PushDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDirectoryRequest.Merge(m, src)
}
func (m *PushDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_PushDirectoryRequest.Size(m)
}
func (m *PushDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushDirectoryRequest proto.InternalMessageInfo

func (m *PushDirectoryRequest) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *PushDirectoryRequest) GetUris() []string {
	if m != nil {
		return m.Uris
	}
	return nil
}

func (m *PushDirectoryRequest) GetQualifiers() []*Qualifier {
	if m != nil {
		return m.Qualifiers
	}
	return nil
}

func (m *PushDirectoryRequest) GetExpireAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireAt
	}
	return nil
}

func (m *PushDirectoryRequest) GetRootDirectoryDigest() *v2.Digest {
	if m != nil {
		return m.RootDirectoryDigest
	}
	return nil
}

func (m *PushDirectoryRequest) GetReferencesBlobs() []*v2.Digest {
	if m != nil {
		return m.ReferencesBlobs
	}
	return nil
}

func (m *PushDirectoryRequest) GetReferencesDirectories() []*v2.Digest {
	if m != nil {
		return m.ReferencesDirectories
	}
	return nil
}

type PushDirectoryResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushDirectoryResponse) Reset()         { *m = PushDirectoryResponse{} }
func (m *PushDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*PushDirectoryResponse) ProtoMessage()    {}
func (*PushDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ec73e5c59f3e8a, []int{8}
}

func (m *PushDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushDirectoryResponse.Unmarshal(m, b)
}
func (m *PushDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushDirectoryResponse.Marshal(b, m, deterministic)
}
func (m *PushDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushDirectoryResponse.Merge(m, src)
}
func (m *PushDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_PushDirectoryResponse.Size(m)
}
func (m *PushDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushDirectoryResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Qualifier)(nil), "build.bazel.remote.artifact.v1.Qualifier")
	proto.RegisterType((*FetchBlobRequest)(nil), "build.bazel.remote.artifact.v1.FetchBlobRequest")
	proto.RegisterType((*FetchBlobResponse)(nil), "build.bazel.remote.artifact.v1.FetchBlobResponse")
	proto.RegisterType((*FetchDirectoryRequest)(nil), "build.bazel.remote.artifact.v1.FetchDirectoryRequest")
	proto.RegisterType((*FetchDirectoryResponse)(nil), "build.bazel.remote.artifact.v1.FetchDirectoryResponse")
	proto.RegisterType((*PushBlobRequest)(nil), "build.bazel.remote.artifact.v1.PushBlobRequest")
	proto.RegisterType((*PushBlobResponse)(nil), "build.bazel.remote.artifact.v1.PushBlobResponse")
	proto.RegisterType((*PushDirectoryRequest)(nil), "build.bazel.remote.artifact.v1.PushDirectoryRequest")
	proto.RegisterType((*PushDirectoryResponse)(nil), "build.bazel.remote.artifact.v1.PushDirectoryResponse")
}

func init() {
	proto.RegisterFile("build/bazel/remote/artifact/v1/remote_artifact.proto", fileDescriptor_60ec73e5c59f3e8a)
}

var fileDescriptor_60ec73e5c59f3e8a = []byte{
	// 835 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4d, 0x6e, 0xdb, 0x46,
	0x14, 0x06, 0x29, 0xc9, 0xb6, 0x9e, 0x6a, 0x5b, 0x1d, 0x5b, 0x36, 0x2b, 0x14, 0xae, 0xc1, 0x2e,
	0x6a, 0x6b, 0x41, 0xda, 0xb2, 0xe4, 0xc2, 0x02, 0xba, 0x90, 0x2a, 0x14, 0xed, 0xa6, 0x70, 0xd9,
	0xae, 0x5a, 0xa0, 0x04, 0x45, 0x8d, 0x5c, 0x02, 0x14, 0x87, 0xe6, 0x0c, 0x05, 0xb7, 0x45, 0x36,
	0xb9, 0x42, 0x0e, 0x10, 0xe4, 0x07, 0x08, 0x90, 0x0b, 0x04, 0x41, 0xae, 0x90, 0x5d, 0xae, 0x60,
	0x64, 0x9b, 0x2b, 0x04, 0x33, 0x1c, 0x4a, 0xb2, 0xec, 0x44, 0x92, 0x9d, 0x00, 0x49, 0x90, 0xdd,
	0xf0, 0xcd, 0xfb, 0x3e, 0x7e, 0xf3, 0xbd, 0x37, 0x4f, 0x14, 0xd4, 0x3a, 0xb1, 0xe7, 0x77, 0xcd,
	0x8e, 0xf3, 0x1f, 0xf6, 0xcd, 0x08, 0xf7, 0x09, 0xc3, 0xa6, 0x13, 0x31, 0xaf, 0xe7, 0xb8, 0xcc,
	0x1c, 0xec, 0xcb, 0x90, 0x9d, 0x86, 0x8c, 0x30, 0x22, 0x8c, 0xa0, 0x2d, 0x81, 0x32, 0x04, 0xca,
	0x48, 0x52, 0x8c, 0x61, 0xca, 0x60, 0xbf, 0x7c, 0x78, 0x05, 0x2b, 0x3e, 0xc3, 0x6e, 0xcc, 0x3c,
	0x12, 0x98, 0x83, 0x6a, 0x4a, 0x3b, 0x8c, 0x25, 0xbc, 0xe5, 0xaf, 0x4f, 0x08, 0x39, 0xf1, 0xb1,
	0xe9, 0x84, 0x9e, 0xe9, 0x04, 0x01, 0x61, 0x0e, 0xdf, 0xa4, 0x72, 0x77, 0x4b, 0xee, 0x8a, 0xa7,
	0x4e, 0xdc, 0x33, 0xbb, 0x71, 0xe4, 0x8c, 0xa1, 0xbf, 0x99, 0xdc, 0x67, 0x5e, 0x1f, 0x53, 0xe6,
	0xf4, 0x43, 0x99, 0xb0, 0x29, 0x13, 0xa2, 0xd0, 0x35, 0x29, 0x73, 0x58, 0x2c, 0x99, 0xf5, 0x3a,
	0xe4, 0x7f, 0x8b, 0x1d, 0xdf, 0xeb, 0x79, 0x38, 0x42, 0x08, 0xb2, 0x81, 0xd3, 0xc7, 0x9a, 0xb2,
	0xad, 0xec, 0xe4, 0x2d, 0xb1, 0x46, 0xeb, 0x90, 0x1b, 0x38, 0x7e, 0x8c, 0x35, 0x55, 0x04, 0x93,
	0x07, 0xfd, 0xae, 0x0a, 0xc5, 0x9f, 0x30, 0x73, 0xff, 0x69, 0xf9, 0xa4, 0x63, 0xe1, 0xd3, 0x18,
	0x53, 0x86, 0xbe, 0x85, 0x65, 0x2f, 0xa0, 0xcc, 0x09, 0x5c, 0x6c, 0x8f, 0xf1, 0x7c, 0x91, 0x06,
	0x7f, 0xe5, 0x7c, 0x07, 0xb0, 0xc8, 0xc5, 0x91, 0x98, 0x09, 0xc6, 0x42, 0xf5, 0x2b, 0x23, 0xd1,
	0x66, 0xa4, 0xe2, 0x8d, 0xb6, 0x3c, 0x9c, 0x95, 0x66, 0x22, 0x0b, 0x36, 0x89, 0xdf, 0xc5, 0x94,
	0xd9, 0x2e, 0x09, 0x18, 0x0e, 0x98, 0xed, 0xb8, 0x2e, 0x0e, 0x19, 0xee, 0x6a, 0x19, 0x41, 0x52,
	0xbe, 0x44, 0xf2, 0x47, 0xea, 0x80, 0x55, 0x4a, 0xa0, 0x3f, 0x26, 0xc8, 0xa6, 0x04, 0xf2, 0xc3,
	0xc6, 0x91, 0x47, 0xb5, 0xec, 0x76, 0x86, 0x1f, 0x96, 0xaf, 0xd1, 0x2f, 0x00, 0xa7, 0xa9, 0x1b,
	0x54, 0xcb, 0x6d, 0x67, 0x76, 0x0a, 0xd5, 0x5d, 0xe3, 0xed, 0x25, 0x37, 0x86, 0xfe, 0x59, 0x63,
	0x60, 0xfd, 0x9e, 0x0a, 0x5f, 0x8e, 0x39, 0x44, 0x43, 0x12, 0x50, 0x8c, 0x2a, 0xb0, 0x90, 0xd8,
	0x2f, 0xbc, 0x29, 0x54, 0x51, 0xaa, 0x3b, 0x0a, 0x5d, 0xe3, 0x77, 0xb1, 0x63, 0xc9, 0x0c, 0x54,
	0x84, 0x4c, 0x1c, 0x79, 0xd2, 0x77, 0xbe, 0x9c, 0x90, 0x97, 0xb9, 0x81, 0x3c, 0x74, 0x04, 0x80,
	0xcf, 0x42, 0x2f, 0xc2, 0xd4, 0x76, 0x98, 0x96, 0x9d, 0x6a, 0x62, 0x5e, 0x66, 0x37, 0x19, 0xfa,
	0x19, 0x0a, 0x1d, 0x9f, 0x74, 0xec, 0xae, 0x77, 0x82, 0x29, 0xd3, 0x72, 0x02, 0xfb, 0xdd, 0x55,
	0x32, 0x46, 0x4d, 0x3e, 0xa8, 0x1a, 0x6d, 0x91, 0x6e, 0x01, 0xc7, 0x26, 0x6b, 0xfd, 0xa1, 0x0a,
	0x25, 0xe1, 0x51, 0xdb, 0x8b, 0xb0, 0xcb, 0x48, 0xf4, 0xef, 0xe7, 0x56, 0xba, 0xa2, 0x95, 0x9e,
	0xaa, 0xb0, 0x31, 0x69, 0xd3, 0x27, 0xd4, 0x4f, 0x7f, 0x41, 0x29, 0x22, 0x84, 0xd9, 0xdd, 0xf4,
	0x74, 0xd7, 0xec, 0xac, 0x35, 0xce, 0x32, 0xb4, 0x48, 0xb6, 0xd8, 0xf3, 0x0c, 0xac, 0x1e, 0xc7,
	0x74, 0xfe, 0x39, 0x95, 0xd6, 0x54, 0x7d, 0x63, 0x4d, 0x6f, 0xe4, 0xd7, 0xf7, 0x20, 0x1d, 0x98,
	0xcd, 0xae, 0xa5, 0x24, 0xf9, 0x5d, 0xde, 0x3e, 0x64, 0x41, 0x31, 0xc2, 0x3d, 0x1c, 0xe1, 0xc0,
	0xc5, 0xd4, 0xe6, 0x1b, 0x54, 0x5b, 0x10, 0x67, 0x9a, 0x99, 0x6e, 0x75, 0x44, 0xc0, 0x0d, 0xa6,
	0xe8, 0x6f, 0xd8, 0x18, 0xe3, 0x4c, 0x2b, 0xea, 0x61, 0xaa, 0x2d, 0xce, 0xc7, 0x5c, 0x1a, 0xd1,
	0xb4, 0x47, 0x2c, 0x3a, 0x82, 0xe2, 0xa8, 0x9a, 0xc9, 0x1d, 0xd0, 0xcf, 0x33, 0xb0, 0xce, 0x83,
	0xd7, 0x1b, 0x22, 0x1f, 0x6a, 0x9d, 0xdf, 0xe7, 0xad, 0xf8, 0x28, 0x4b, 0xbf, 0x09, 0xa5, 0x89,
	0x2a, 0x27, 0xf5, 0xaf, 0xbe, 0x52, 0x21, 0x27, 0xc6, 0x23, 0x7a, 0xa4, 0x40, 0x7e, 0xf8, 0x9b,
	0x8b, 0xf6, 0xa6, 0x55, 0x6c, 0xf2, 0x03, 0xa6, 0xbc, 0x3f, 0x07, 0x42, 0x36, 0x5f, 0xfd, 0xf6,
	0x8b, 0xf3, 0x3b, 0xaa, 0xa9, 0x57, 0xf8, 0x27, 0xe3, 0xff, 0x17, 0xda, 0xed, 0x87, 0x4a, 0xe5,
	0xd6, 0xf0, 0x8b, 0x92, 0x36, 0x7a, 0x29, 0xb6, 0xa1, 0x54, 0xd0, 0x33, 0x05, 0x56, 0x2e, 0x8e,
	0x74, 0x54, 0x9f, 0xe9, 0xe5, 0x93, 0x4d, 0x5e, 0x3e, 0x9c, 0x17, 0x26, 0x85, 0x37, 0x84, 0xf0,
	0x9a, 0x6e, 0xce, 0x26, 0x7c, 0x48, 0xd0, 0x50, 0x2a, 0xd5, 0x97, 0x2a, 0x64, 0x79, 0x2d, 0xd0,
	0x03, 0x05, 0x96, 0xd2, 0xfb, 0x88, 0xcc, 0x69, 0x4a, 0x26, 0xe6, 0x70, 0x79, 0x6f, 0x76, 0x80,
	0x14, 0x5d, 0x13, 0xa2, 0x0d, 0x7d, 0x77, 0xaa, 0xe8, 0x50, 0x42, 0xb9, 0xd9, 0x4f, 0x14, 0x58,
	0xbe, 0xd0, 0x3a, 0xa8, 0x36, 0xcb, 0x9b, 0x2f, 0x59, 0x5d, 0x9f, 0x13, 0x25, 0x45, 0x1f, 0x09,
	0xd1, 0x07, 0xba, 0x31, 0x93, 0xe8, 0x71, 0xa3, 0x5b, 0x7d, 0x98, 0xf2, 0x7f, 0xa3, 0xb5, 0x66,
	0x89, 0x58, 0x53, 0x86, 0x8e, 0xf9, 0x48, 0x39, 0x56, 0xfe, 0x5c, 0x49, 0x52, 0xd3, 0xcc, 0xfb,
	0xaa, 0x6a, 0x35, 0x1f, 0xab, 0x5b, 0x2d, 0x41, 0xd6, 0x12, 0x64, 0x09, 0xd0, 0x68, 0x8e, 0xc8,
	0x3a, 0x0b, 0x62, 0x22, 0x1d, 0xbc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x10, 0xb0, 0x15, 0x1b,
	0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FetchClient is the client API for Fetch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FetchClient interface {
	FetchBlob(ctx context.Context, in *FetchBlobRequest, opts ...grpc.CallOption) (*FetchBlobResponse, error)
	FetchDirectory(ctx context.Context, in *FetchDirectoryRequest, opts ...grpc.CallOption) (*FetchDirectoryResponse, error)
}

type fetchClient struct {
	cc *grpc.ClientConn
}

func NewFetchClient(cc *grpc.ClientConn) FetchClient {
	return &fetchClient{cc}
}

func (c *fetchClient) FetchBlob(ctx context.Context, in *FetchBlobRequest, opts ...grpc.CallOption) (*FetchBlobResponse, error) {
	out := new(FetchBlobResponse)
	err := c.cc.Invoke(ctx, "/build.bazel.remote.artifact.v1.Fetch/FetchBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fetchClient) FetchDirectory(ctx context.Context, in *FetchDirectoryRequest, opts ...grpc.CallOption) (*FetchDirectoryResponse, error) {
	out := new(FetchDirectoryResponse)
	err := c.cc.Invoke(ctx, "/build.bazel.remote.artifact.v1.Fetch/FetchDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FetchServer is the server API for Fetch service.
type FetchServer interface {
	FetchBlob(context.Context, *FetchBlobRequest) (*FetchBlobResponse, error)
	FetchDirectory(context.Context, *FetchDirectoryRequest) (*FetchDirectoryResponse, error)
}

// UnimplementedFetchServer can be embedded to have forward compatible implementations.
type UnimplementedFetchServer struct {
}

func (*UnimplementedFetchServer) FetchBlob(ctx context.Context, req *FetchBlobRequest) (*FetchBlobResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method FetchBlob not implemented")
}
func (*UnimplementedFetchServer) FetchDirectory(ctx context.Context, req *FetchDirectoryRequest) (*FetchDirectoryResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method FetchDirectory not implemented")
}

func RegisterFetchServer(s *grpc.Server, srv FetchServer) {
	s.RegisterService(&_Fetch_serviceDesc, srv)
}

func _Fetch_FetchBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchBlobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FetchServer).FetchBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.bazel.remote.artifact.v1.Fetch/FetchBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FetchServer).FetchBlob(ctx, req.(*FetchBlobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Fetch_FetchDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FetchServer).FetchDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.bazel.remote.artifact.v1.Fetch/FetchDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FetchServer).FetchDirectory(ctx, req.(*FetchDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Fetch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "build.bazel.remote.artifact.v1.Fetch",
	HandlerType: (*FetchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchBlob",
			Handler:    _Fetch_FetchBlob_Handler,
		},
		{
			MethodName: "FetchDirectory",
			Handler:    _Fetch_FetchDirectory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "build/bazel/remote/artifact/v1/remote_artifact.proto",
}

// PushClient is the client API for Push service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushClient interface {
	PushBlob(ctx context.Context, in *PushBlobRequest, opts ...grpc.CallOption) (*PushBlobResponse, error)
	PushDirectory(ctx context.Context, in *PushDirectoryRequest, opts ...grpc.CallOption) (*PushDirectoryResponse, error)
}

type pushClient struct {
	cc *grpc.ClientConn
}

func NewPushClient(cc *grpc.ClientConn) PushClient {
	return &pushClient{cc}
}

func (c *pushClient) PushBlob(ctx context.Context, in *PushBlobRequest, opts ...grpc.CallOption) (*PushBlobResponse, error) {
	out := new(PushBlobResponse)
	err := c.cc.Invoke(ctx, "/build.bazel.remote.artifact.v1.Push/PushBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushClient) PushDirectory(ctx context.Context, in *PushDirectoryRequest, opts ...grpc.CallOption) (*PushDirectoryResponse, error) {
	out := new(PushDirectoryResponse)
	err := c.cc.Invoke(ctx, "/build.bazel.remote.artifact.v1.Push/PushDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServer is the server API for Push service.
type PushServer interface {
	PushBlob(context.Context, *PushBlobRequest) (*PushBlobResponse, error)
	PushDirectory(context.Context, *PushDirectoryRequest) (*PushDirectoryResponse, error)
}

// UnimplementedPushServer can be embedded to have forward compatible implementations.
type UnimplementedPushServer struct {
}

func (*UnimplementedPushServer) PushBlob(ctx context.Context, req *PushBlobRequest) (*PushBlobResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method PushBlob not implemented")
}
func (*UnimplementedPushServer) PushDirectory(ctx context.Context, req *PushDirectoryRequest) (*PushDirectoryResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method PushDirectory not implemented")
}

func RegisterPushServer(s *grpc.Server, srv PushServer) {
	s.RegisterService(&_Push_serviceDesc, srv)
}

func _Push_PushBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushBlobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).PushBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.bazel.remote.artifact.v1.Push/PushBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).PushBlob(ctx, req.(*PushBlobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Push_PushDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).PushDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.bazel.remote.artifact.v1.Push/PushDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).PushDirectory(ctx, req.(*PushDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Push_serviceDesc = grpc.ServiceDesc{
	ServiceName: "build.bazel.remote.artifact.v1.Push",
	HandlerType: (*PushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushBlob",
			Handler:    _Push_PushBlob_Handler,
		},
		{
			MethodName: "PushDirectory",
			Handler:    _Push_PushDirectory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "build/bazel/remote/artifact/v1/remote_artifact.proto",
}
